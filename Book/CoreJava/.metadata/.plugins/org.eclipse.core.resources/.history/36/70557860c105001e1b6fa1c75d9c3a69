package com.corejava.streams;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.Iterator;
import java.util.List;
import java.util.Set;
import java.util.stream.Collectors;
import java.util.stream.Stream;

public class CollectingResults {

	public static Stream<String> noVowels() throws IOException {
		Path path = Paths.get("/Users/sumankhara/Documents/PersonalProjects/Java/alice.txt");
		var contents = Files.readString(path);
		
		List<String> wordList = List.of(contents.split("\\PL+"));
		return wordList.stream().map(s -> s.replaceAll("[AEIOUaeiou]", ""));
	}
	
	public static <T> void show(String label, Set<T> set) {
		System.out.println(label + ": " + set.getClass().getName());
		System.out.println("[" + set.stream().map(Object::toString).collect(Collectors.joining(",")) + "]");
	}
	
	public static void main(String[] args) {
		Iterator<Integer> iterate = Stream.iterate(0, n -> n + 1).limit(10).iterator();
		while(iterate.hasNext()) {
			System.out.println(iterate.next());
		}
		
		Object[] numbers = Stream.iterate(0, n -> n + 1).limit(10).toArray();
		System.out.println("Object array: " + numbers);
	}
}
